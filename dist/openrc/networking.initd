#!/sbin/openrc-run

: "${cfgfile:="/etc/network/interfaces"}"
ifstate=/run/ifstate

# Alias used commands to make code bellow less repetitive
alias ifquery='ifquery --interfaces "$cfgfile" --state-file "$ifstate"'
alias ifdown='ifdown --interfaces "$cfgfile" --state-file "$ifstate"'
alias ifup='ifup --interfaces "$cfgfile" --state-file "$ifstate"'

depend() {
	need localmount
	want dev-settle
	after bootmisc hwdrivers modules
	provide net

	# Skip bringing interfaces down during a shutdown
	if yesno "${keep_network:-YES}"; then
		keyword -shutdown
	fi
	# When inside a container, exclude this service from any dependencies
	keyword -containers
}

# Print a single interface to configure, if available
single_interface() {
	# Use service name suffix as an interface name
	interface="${RC_SVCNAME##*.}"
	# If service name had no suffix, this will leave the interface name blank
	interface="${interface#"$RC_SVCNAME"}"
	# Only print interfaces that have been configured
	if ifquery "$interface" > /dev/null 2>&1; then
		printf '%s' "$interface"
	else
		return 1
	fi
}

# return the list of interfaces we should try stop
find_running_ifaces() {
	single_interface || ifquery -r -i "$cfgfile" -S "$ifstate"
}

start() {
	ebegin 'Starting networking'

	eindent
	# Bring up a single interface, or all interfaces that have been marked for automatic configuration
	for interface in $(single_interface || ifquery --auto --list); do
		ebegin "$interface"
		if ifup "$interface"; then
			# Atleast one interface needs to start for success
			success=0
			eend 0
		else
			# Interface in an unknown state, force deconfiguration
			ifdown --force "$interface" > /dev/null 2>&1
			eend 1
		fi
	done
	eoutdent

	return "${success:-1}"
}

stop() {
	iface=''

	ebegin "Stopping networking"
	eindent
	for iface in $(find_running_ifaces); do
		ebegin "$iface"
		ifdown -i "$cfgfile" -S "$ifstate" -f "$iface" > /dev/null
		eend $?
	done
	eoutdent
	return 0
}
