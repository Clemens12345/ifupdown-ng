#!/sbin/openrc-run

# Filepath to the interface configuration database
: "${cfgfile:="/etc/network/interfaces"}"
# Filepath to the interface state database,
: "${ifstate:="/run/ifstate"}"
# Whether to provide the 'shutdown' keyword to OpenRC
: "${keep_network:="YES"}"

# Alias used commands to make code bellow less repetitive
alias ifquery='ifquery --interfaces "$cfgfile" --state-file "$ifstate"'
alias ifdown='ifdown --interfaces "$cfgfile" --state-file "$ifstate"'
alias ifup='ifup --interfaces "$cfgfile" --state-file "$ifstate"'

depend() {
	need localmount
	want dev-settle
	after bootmisc hwdrivers modules
	provide net

	# Skip bringing interfaces down during a shutdown
	if yesno "$keep_network"; then
		keyword -shutdown
	fi
	# When inside a container, exclude this service from any dependencies
	keyword -containers
}

# Print a single interface to configure, if available
single_interface() {
	# Use service name suffix as an interface name
	interface="${RC_SVCNAME##*.}"
	# If service name had no suffix, this will leave the interface name blank
	interface="${interface#"$RC_SVCNAME"}"
	# Only print interfaces that have been configured
	if ifquery "$interface" > /dev/null 2>&1; then
		printf '%s' "$interface"
	else
		return 1
	fi
}

start() {
	ebegin 'Starting networking'

	eindent
	# Bring up a single interface, or all interfaces that have been marked for automatic configuration
	for interface in $(single_interface || ifquery --auto --list); do
		ebegin "$interface"
		if ifup "$interface"; then
			# Atleast one interface needs to start for success
			success=0
			eend 0
		else
			# Interface in an unknown state, force deconfiguration
			ifdown --force "$interface" > /dev/null 2>&1
			eend 1
		fi
	done
	eoutdent

	return "${success:-1}"
}

stop() {
	ebegin 'Stopping networking'

	eindent
	# Take down a single interface, or all interfaces that have been marked for automatic (de)configuration
	for interface in $(single_interface || ifquery --auto --running); do
		ebegin "$interface"
		ifdown "$interface"
		eend $?
	done
	eoutdent

	return 0
}
